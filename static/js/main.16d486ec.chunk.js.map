{"version":3,"sources":["Event.js","EventList.js","mock-data.js","api.js","CitySearch.js","NumberOfEvents.js","App.js","serviceWorker.js","index.js"],"names":["Event","state","showDetails","handleShowDetails","setState","showdetails","this","className","props","event","summary","start","dateTime","timeZone","onClick","ref","htmlLink","target","description","Component","EventList","events","map","key","id","mockData","kind","etag","status","created","updated","location","creator","email","self","organizer","end","recurringEventId","originalStartTime","iCalUID","sequence","reminders","useDefault","extractLocations","Set","getEvents","a","locations","CitySearch","query","suggestions","handleInputChanged","value","filter","toUpperCase","indexOf","handleItemClicked","suggestion","updateEvents","type","onChange","NumberOfEvents","numberOfEvents","handleOnchange","App","currentLocation","then","response","slice","mounted","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.16d486ec.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Event extends Component {\n  state = {\n    showDetails: false,\n  };\n\n  handleShowDetails = () => {\n    if (this.state.showDetails ===false) {\n      this.setState({showDetails: true });\n    } else {\n      this.setState({ showdetails: false });  \n    }\n  };\n\n  render() {\n\n    const showDetails = this.state.showDetails;\n    \n    return (\n    <div className=\"Event\">\n      <div className=\"event__summary\">\n      <h1> {this.props.event.summary}</h1>\n      </div>\n      <p className=\"event__summary--dateTime\">{this.props.event.start.dateTime}</p>\n      <p className=\"event__summary--timeZone\">{this.props.event.start.timeZone}</p>\n      {showDetails && \n      <button\n        className='details-btn'\n        onClick={() => this.handleShowDetails()}> \n        hide details\n      </button>}\n      {!showDetails && \n      <button\n        className='details-btn'\n        onClick={() => this.handleShowDetails()}> \n        show details\n      </button>}\n      {showDetails && \n        <div className='event__Details'>\n          <h3>About event: </h3>\n          <h4><a ref={this.props.event.htmlLink} target='blank'> See details on Google Calendar </a></h4>\n          <p className=\"event__Details--description\">{this.props.event.description}</p>\n      </div>\n      }\n    </div>\n    );\n  }\n}\n\nexport default Event;","import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n\n  render() {\n    return (\n      <ul className=\"EventList\"> \n      {this.props.events.map(event =>\n        <li key={event.id}>\n          <Event event={event} />\n        </li>)}\n      </ul>\n    );\n  }\n}\n\nexport default EventList;\n\n","export const mockData = [\n  // contains 4 different calendar events, (2 different summaries), in 2 different cities\n    {\n      kind: 'calendar#event',\n      etag: '\"3181161784712000\"',\n      id: '4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z',\n      status: 'confirmed',\n      htmlLink: 'https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\n      created: '2020-05-19T19:17:46.000Z',\n      updated: '2020-05-27T12:01:32.356Z',\n      summary: 'Learn JavaScript',\n      description: 'Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.',\n      location: 'London, UK',\n      creator: {\n        email: 'fullstackwebdev@careerfoundry.com',\n        self: true\n      },\n      organizer: {\n        email: 'fullstackwebdev@careerfoundry.com',\n        self: true\n      },\n      start: {\n        dateTime: '2020-05-19T16:00:00+02:00',\n        timeZone: 'Europe/Berlin'\n      },\n      end: {\n        dateTime: '2020-05-19T17:00:00+02:00',\n        timeZone: 'Europe/Berlin'\n      },\n      recurringEventId: '4eahs9ghkhrvkld72hogu9ph3e',\n      originalStartTime: {\n        dateTime: '2020-05-19T16:00:00+02:00',\n        timeZone: 'Europe/Berlin'\n      },\n      iCalUID: '4eahs9ghkhrvkld72hogu9ph3e@google.com',\n      sequence: 0,\n      reminders: {\n        useDefault: true\n      }\n    },\n    {\n      kind: 'calendar#event',\n      etag: '\"3181159875584000\"',\n      id: '3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z',\n      status: 'confirmed',\n      htmlLink: 'https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\n      created: '2020-05-19T19:14:30.000Z',\n      updated: '2020-05-27T11:45:37.792Z',\n      summary: 'React is Fun',\n      description: 'Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. ',\n      location: 'Berlin, Germany',\n      creator: {\n        email: 'fullstackwebdev@careerfoundry.com',\n        self: true\n      },\n      organizer: {\n        email: 'fullstackwebdev@careerfoundry.com',\n        self: true\n      },\n      start: {\n        dateTime: '2020-05-20T14:00:00+02:00',\n        timeZone: 'Europe/Berlin'\n      },\n      end: {\n        dateTime: '2020-05-20T15:00:00+02:00',\n        timeZone: 'Europe/Berlin'\n      },\n      recurringEventId: '3qtd6uscq4tsi6gc7nmmtpqlct',\n      originalStartTime: {\n        dateTime: '2020-05-20T14:00:00+02:00',\n        timeZone: 'Europe/Berlin'\n      },\n      iCalUID: '3qtd6uscq4tsi6gc7nmmtpqlct@google.com',\n      sequence: 0,\n      reminders: {\n        useDefault: true\n      }\n    },\n    {\n      kind: 'calendar#event',\n      etag: '\"3181161784712000\"',\n      id: '4eahs9ghkhrvkld72hogu9ph3e_20200521T140000Z',\n      status: 'confirmed',\n      htmlLink: 'https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MjFUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\n      created: '2020-05-19T19:17:46.000Z',\n      updated: '2020-05-27T12:01:32.356Z',\n      summary: 'Learn JavaScript',\n      description: 'Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.',\n      location: 'London, UK',\n      creator: {\n        email: 'fullstackwebdev@careerfoundry.com',\n        self: true\n      },\n      organizer: {\n        email: 'fullstackwebdev@careerfoundry.com',\n        self: true\n      },\n      start: {\n        dateTime: '2020-05-21T16:00:00+02:00',\n        timeZone: 'Europe/Berlin'\n      },\n      end: {\n        dateTime: '2020-05-21T17:00:00+02:00',\n        timeZone: 'Europe/Berlin'\n      },\n      recurringEventId: '4eahs9ghkhrvkld72hogu9ph3e',\n      originalStartTime: {\n        dateTime: '2020-05-21T16:00:00+02:00',\n        timeZone: 'Europe/Berlin'\n      },\n      iCalUID: '4eahs9ghkhrvkld72hogu9ph3e@google.com',\n      sequence: 0,\n      reminders: {\n        useDefault: true\n      }\n    },\n    {\n      kind: 'calendar#event',\n      etag: '\"3181159875584000\"',\n      id: '3qtd6uscq4tsi6gc7nmmtpqlct_20200522T120000Z',\n      status: 'confirmed',\n      htmlLink: 'https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjJUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\n      created: '2020-05-19T19:14:30.000Z',\n      updated: '2020-05-27T11:45:37.792Z',\n      summary: 'React is Fun',\n      description: 'Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. ',\n      location: 'Berlin, Germany',\n      creator: {\n        email: 'fullstackwebdev@careerfoundry.com',\n        self: true\n      },\n      organizer: {\n        email: 'fullstackwebdev@careerfoundry.com',\n        self: true\n      },\n      start: {\n        dateTime: '2020-05-22T14:00:00+02:00',\n        timeZone: 'Europe/Berlin'\n      },\n      end: {\n        dateTime: '2020-05-22T15:00:00+02:00',\n        timeZone: 'Europe/Berlin'\n      },\n      recurringEventId: '3qtd6uscq4tsi6gc7nmmtpqlct',\n      originalStartTime: {\n        dateTime: '2020-05-22T14:00:00+02:00',\n        timeZone: 'Europe/Berlin'\n      },\n      iCalUID: '3qtd6uscq4tsi6gc7nmmtpqlct@google.com',\n      sequence: 0,\n      reminders: {\n        useDefault: true\n      }\n    },\n    // all rest mockdata goes here\n\n];\n","import { mockData } from './mock-data';\n/**\n *\n * @param {*} events:\n * The following function should be in the “api.js” file.\n * This function takes an events array, then uses map to create a new array with only locations.\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\n * The Set will remove all duplicates from the array.\n */\nexport const extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\n\nexport const getEvents = async () => {\n  return { events: mockData, locations: extractLocations(mockData) };\n};\n\n// export const extractSummaries = (events) => {\n//  var extractSummaries = events.map((event) => event.summary);\n//   var summaries = [...new Set(extractSummaries)];\n// return summaries;};","import React, { Component } from 'react';\nimport { extractLocations } from './api';\nimport { mockData } from './mock-data';\n\n//const locations = extractlocations(mockData);\n\nclass CitySearch extends Component {\n  state = {\n    locations: this.props.locations,\n    query: 'London, UK', \n    suggestions: [],\n  };\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    const suggestions = this.props.locations.filter((location) => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n\n    return this.setState({\n      query: value,\n      suggestions,\n    });\n  };\n  handleItemClicked = (suggestion) => {\n    this.setState({\n      query: suggestion,\n    });\n    this.props.updateEvents(suggestion);\n };\n\n  render() {\n    return (\n      <div className=\"CitySearch\">\n        <h1> Meet App</h1>\n        <h3>Choose your nearest city</h3>\n        <input\n          type='text'\n          className='city'\n          value={this.state.query}\n          onChange={this.handleInputChanged}\n        />\n        <ul className=\"suggestions\">\n          {\n           this.state.suggestions.map((suggestion) => (\n            <li key={suggestion} onClick={() => this.handleItemClicked(suggestion)}>\n           {suggestion}\n            </li>\n            ))\n          }\n            <li onClick={() => this.handleItemClicked('all')}>\n              <b>See all cities</b>\n              </li>\n          </ul>\n       </div>\n    );\n  }\n}\n\nexport default CitySearch;","import React, { Component } from 'react';\n\nclass NumberOfEvents extends Component {\n  state = {\n    numberOfEvents: 32,\n  }\n\n  render() {\n    return(\n      <div className='numberOfEvents'>\n        <label>Number of Events: </label>\n          <input\n            value={this.state.numberOfEvents}\n            type='text'\n            className='numberOfEventsInput'\n            onChange={this.handleOnchange}\n            >\n        </input>\n      </div>\n    );\n  }\n\n}\n\nexport default NumberOfEvents;","import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { getEvents } from './api';\n\nclass App extends Component {\n\nstate = {\n  events: [],\n  currentLocation: 'all',\n  locations: [],\n};\ncomponentDidMount() {\n  this.mounted = true;\n  getEvents().then((response) => {\n    if(this.mounted) {\n    this.setState({ events: response.events, locations: response.locations });\n    }\n  });\n}\ncomponentWillUnmount(){\n  this.mounted = false;\n}\n\nupdateEvents = (location) => {\n  getEvents().then((response) => {\n    const locationEvents =\n      location === 'all'\n        ? response.events\n        : response.events.filter((event) => event.location === location);\n    const events = locationEvents.slice(0, NumberOfEvents); // even controleren of NumberOfEvents met hfdletter begint\n    return this.setState({\n      events : events,\n      currentLocation: location,\n    });\n  });\n}\n\n  render() {\n\n    return (\n      < div className=\"App\">\n        <CitySearch updateEvents={this.updateEvents} locations={this.state.locations} />\n        <EventList events={this.state.events} />\n        <NumberOfEvents />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}