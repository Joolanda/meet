{"version":3,"sources":["Event.js","EventList.js","Alert.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","EventGenre.js","App.js","serviceWorker.js","index.js"],"names":["Event","state","showDetails","this","props","event","summary","start","eventStart","moment","dateTime","toDate","className","onClick","setState","description","Component","EventList","events","map","key","id","Alert","getStyle","color","fontSize","style","text","InfoAlert","WarningAlert","ErrorAlert","CitySearch","locations","query","suggestions","showSuggestions","handleInputChanged","value","target","filter","location","toUpperCase","indexOf","length","infoText","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","placeholder","NumberOfEvents","numberOfEvents","mockData","kind","etag","status","htmlLink","created","updated","creator","email","self","organizer","timeZone","end","recurringEventId","originalStartTime","iCalUID","sequence","reminders","useDefault","removeQuery","window","history","pushState","pathname","newurl","protocol","host","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","extractLocations","Set","getEvents","NProgress","href","startsWith","done","navigator","onLine","localStorage","getItem","JSON","parse","getAccessToken","token","url","axios","get","data","setItem","stringify","tokenCheck","removeItem","searchParams","URLSearchParams","search","code","results","authUrl","getToken","encodeCode","encodeURIComponent","access_token","EventGenre","useState","setData","useEffect","getData","genre","split","includes","name","COLORS","height","width","cx","cy","labelLine","outerRadius","fill","dataKey","label","percent","toFixed","entry","index","App","currentLocation","offlineText","warningAlert","Navigator","number","city","shift","eventCount","response","slice","mounted","margin","top","right","bottom","left","allowDecimals","cursor","strokeDasharray","verticalAlign","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","contentType","ready","unregister","reload","checkValidServiceWorker","atatus","install","Error"],"mappings":"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","file":"static/js/main.7a26e6d2.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport moment from 'moment';\n\nclass Event extends Component {\n  state = {\n    showDetails: false,\n  };\n\n  render() {\n    const { showDetails } = this.state;\n    const {summary, start } = this.props.event;\n    const eventStart = moment(start.dateTime, \"YYYY-MM-DD HH:mm\").toDate();\n    return (\n    <div className='event'>\n      <div className='event__summary'>\n      <h1 className=\"event__summary--name\"> {summary}</h1>\n        <p className='event__summary--dateTime'>{`${eventStart}`}</p> \n        {showDetails && (\n          <button\n            className='details-btn'\n            onClick={() => this.setState({ showDetails: !showDetails })}>\n            hide details\n          </button>\n          )}\n          {!showDetails && (\n        <button\n            className=\"details-btn\"\n            onClick={() => this.setState({ showDetails: !showDetails })}>\n            show details\n          </button>\n          )}\n        </div>\n        {showDetails && (\n          <div className=\"event__Details\">\n            <h4>About event:</h4>\n            <p className=\"event__Details--description\">\n              {this.props.event.description}\n            </p>\n          </div>\n        )}\n        </div>\n    );\n  }\n}\n\nexport default Event;","import React, { Component } from 'react';\nimport Event from './Event';\n\n/* const EventList = ({ events }) => {\n  if (!events) return null;\n  return (\n    <ul className=\"EventList\">\n      {events.map((event) => (\n        <li key={event.id}>\n          <Event event={event} />\n        </li>\n      ))}\n    </ul>\n  );\n}; */\n\nclass EventList extends Component {\n\n  render() {\n    return (\n      <ul className=\"EventList\"> \n      {this.props.events.map(event => \n        <li key={event.id}>\n          <Event event={event} />\n        </li>)}\n      </ul>\n    );\n  }\n}\n\nexport default EventList;\n\n","import React, { Component } from 'react';\n\nclass Alert extends Component {\n  constructor(props) {\n    super(props);\n    this.color = null;\n  }\n\n  getStyle = () => {\n    return {\n      color: this.color,\n      fontSize: '14px',\n    };\n  }\n  render() {\n    return (\n      <div className=\"Alert\">\n        <p style={this.getStyle()}>{this.props.text}</p>\n      </div>\n    );\n  }\n}\n\nclass InfoAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color= 'blue';\n  }\n}\n\nclass WarningAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'orange';    \n  }\n}\nclass ErrorAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'red';\n    \n  }\n}\n\nexport { InfoAlert, ErrorAlert, WarningAlert };","import React, { Component } from 'react';\nimport { InfoAlert } from './Alert';\n\n//const locations = extractlocations(mockData);\n\nclass CitySearch extends Component {\n  state = {\n    locations: this.props.locations,\n    query: '', \n    suggestions: [],\n    showSuggestions: false,\n  };\n\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.setState({showSuggestions:true});\n    const suggestions = this.props.locations.filter((location) => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n    if (suggestions.length === 0) {\n      this.setState({\n        query: value,\n        infoText: 'We can not find the city you are looking for. Please try another city',\n      });\n    } else {\n      return this.setState({\n        query: value,\n        suggestions,\n        infoText:''\n      });\n    }\n  };\n\n  handleItemClicked = (suggestion) => {\n    this.setState({\n      query: suggestion,\n      suggestions: [],\n      showSuggestions: false,\n      infoText:''\n    });\n    this.props.updateEvents(suggestion);\n };\n\n  render() {\n    return (\n      <div className=\"CitySearch\">\n        <InfoAlert text={this.state.infoText} />\n        <input\n          type='text'\n          className='city'\n          value={this.state.query}\n          onChange={this.handleInputChanged}\n          onFocus={() => { this.setState({ showSuggestions: true }) }}\n          placeholder='London'\n        />\n        <ul \n          className={\n            this.state.showSuggestions ? 'suggestions showSuggestions' : 'display-none'\n          }\n        >\n          {\n           this.state.suggestions.map((suggestion) => (\n            <li key={suggestion} \n            onClick={() => this.handleItemClicked(suggestion)}\n            >\n           {suggestion}\n            </li>\n            ))\n          }\n            <li onClick={() => this.handleItemClicked('all')}>\n              <b>See all cities</b>\n              </li>\n          </ul>\n       </div>\n    );\n  }\n}\n\nexport default CitySearch;","import React, { Component } from 'react';\nimport { ErrorAlert } from './Alert';\n\nclass NumberOfEvents extends Component {\n  state = {\n    numberOfEvents: 32,\n  }\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.props.updateEvents(null, value);\n    this.setState({ numberOfEvents: value });\n\n    if (value < 1) {\n      this.setState({\n        infoText: 'Select number of events from 1 to 32'\n      });\n    } else {\n      this.setState({\n        infoText: \"\",\n      });\n    }\n  };\n\n\n  render() {\n    const { numberOfEvents } = this.state;\n    return(\n      <div className='numberOfEvents'>\n        <label>Number of Events: </label>\n          <input\n            id='numberOfEvents__input'\n            value={numberOfEvents}\n            type='text'\n            className='numberOfEventsInput'\n            onChange={this.handleInputChanged}\n            />\n          <ErrorAlert text={this.state.infoText} />\n      </div>\n    );\n  }\n}\n\nexport default NumberOfEvents;\n","export const mockData = [\n  // contains 4 different calendar events, (2 different summaries), in 2 different cities\n    {\n      kind: 'calendar#event',\n      etag: '\"3181161784712000\"',\n      id: '4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z',\n      status: 'confirmed',\n      htmlLink: 'https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\n      created: '2020-05-19T19:17:46.000Z',\n      updated: '2020-05-27T12:01:32.356Z',\n      summary: 'Learn JavaScript',\n      description: 'Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.',\n      location: 'London, UK',\n      creator: {\n        email: 'fullstackwebdev@careerfoundry.com',\n        self: true\n      },\n      organizer: {\n        email: 'fullstackwebdev@careerfoundry.com',\n        self: true\n      },\n      start: {\n        dateTime: '2020-05-19T16:00:00+02:00',\n        timeZone: 'Europe/Berlin'\n      },\n      end: {\n        dateTime: '2020-05-19T17:00:00+02:00',\n        timeZone: 'Europe/Berlin'\n      },\n      recurringEventId: '4eahs9ghkhrvkld72hogu9ph3e',\n      originalStartTime: {\n        dateTime: '2020-05-19T16:00:00+02:00',\n        timeZone: 'Europe/Berlin'\n      },\n      iCalUID: '4eahs9ghkhrvkld72hogu9ph3e@google.com',\n      sequence: 0,\n      reminders: {\n        useDefault: true\n      }\n    },\n    {\n      kind: 'calendar#event',\n      etag: '\"3181159875584000\"',\n      id: '3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z',\n      status: 'confirmed',\n      htmlLink: 'https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\n      created: '2020-05-19T19:14:30.000Z',\n      updated: '2020-05-27T11:45:37.792Z',\n      summary: 'React is Fun',\n      description: 'Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. ',\n      location: 'Berlin, Germany',\n      creator: {\n        email: 'fullstackwebdev@careerfoundry.com',\n        self: true\n      },\n      organizer: {\n        email: 'fullstackwebdev@careerfoundry.com',\n        self: true\n      },\n      start: {\n        dateTime: '2020-05-20T14:00:00+02:00',\n        timeZone: 'Europe/Berlin'\n      },\n      end: {\n        dateTime: '2020-05-20T15:00:00+02:00',\n        timeZone: 'Europe/Berlin'\n      },\n      recurringEventId: '3qtd6uscq4tsi6gc7nmmtpqlct',\n      originalStartTime: {\n        dateTime: '2020-05-20T14:00:00+02:00',\n        timeZone: 'Europe/Berlin'\n      },\n      iCalUID: '3qtd6uscq4tsi6gc7nmmtpqlct@google.com',\n      sequence: 0,\n      reminders: {\n        useDefault: true\n      }\n    },\n    {\n      kind: 'calendar#event',\n      etag: '\"3181161784712000\"',\n      id: '4eahs9ghkhrvkld72hogu9ph3e_20200521T140000Z',\n      status: 'confirmed',\n      htmlLink: 'https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MjFUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\n      created: '2020-05-19T19:17:46.000Z',\n      updated: '2020-05-27T12:01:32.356Z',\n      summary: 'Learn JavaScript',\n      description: 'Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.',\n      location: 'London, UK',\n      creator: {\n        email: 'fullstackwebdev@careerfoundry.com',\n        self: true\n      },\n      organizer: {\n        email: 'fullstackwebdev@careerfoundry.com',\n        self: true\n      },\n      start: {\n        dateTime: '2020-05-21T16:00:00+02:00',\n        timeZone: 'Europe/Berlin'\n      },\n      end: {\n        dateTime: '2020-05-21T17:00:00+02:00',\n        timeZone: 'Europe/Berlin'\n      },\n      recurringEventId: '4eahs9ghkhrvkld72hogu9ph3e',\n      originalStartTime: {\n        dateTime: '2020-05-21T16:00:00+02:00',\n        timeZone: 'Europe/Berlin'\n      },\n      iCalUID: '4eahs9ghkhrvkld72hogu9ph3e@google.com',\n      sequence: 0,\n      reminders: {\n        useDefault: true\n      }\n    },\n    {\n      kind: 'calendar#event',\n      etag: '\"3181159875584000\"',\n      id: '3qtd6uscq4tsi6gc7nmmtpqlct_20200522T120000Z',\n      status: 'confirmed',\n      htmlLink: 'https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjJUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\n      created: '2020-05-19T19:14:30.000Z',\n      updated: '2020-05-27T11:45:37.792Z',\n      summary: 'React is Fun',\n      description: 'Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. ',\n      location: 'Berlin, Germany',\n      creator: {\n        email: 'fullstackwebdev@careerfoundry.com',\n        self: true\n      },\n      organizer: {\n        email: 'fullstackwebdev@careerfoundry.com',\n        self: true\n      },\n      start: {\n        dateTime: '2020-05-22T14:00:00+02:00',\n        timeZone: 'Europe/Berlin'\n      },\n      end: {\n        dateTime: '2020-05-22T15:00:00+02:00',\n        timeZone: 'Europe/Berlin'\n      },\n      recurringEventId: '3qtd6uscq4tsi6gc7nmmtpqlct',\n      originalStartTime: {\n        dateTime: '2020-05-22T14:00:00+02:00',\n        timeZone: 'Europe/Berlin'\n      },\n      iCalUID: '3qtd6uscq4tsi6gc7nmmtpqlct@google.com',\n      sequence: 0,\n      reminders: {\n        useDefault: true\n      }\n    },\n    // all rest mockdata goes here\n\n];\n","import { mockData } from './mock-data';\nimport NProgress from 'nprogress';\nimport axios from 'axios';\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl =\n    window.location.protocol + \"//\" + \n    window.location.host +\n    window.location.pathname;\n  window.history.pushState(\"\", \"\", newurl);\n  } else {\n    newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};\n\n//  call a function, checkToken, to check the token’s validity\nconst checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n    .then((res) => res.json())\n    .catch((error) => error.json());\n\n  return result;\n};\n    // some keys, check them later\n    //\"YOUR_SERVERLESS_GET_AUTH_URL_ENDPOINT\"\n    // const getAuthURL = \"https://jvsv8khfpd.execute-api.us-east-1.amazonaws.com/dev/api/get-auth-url\"\n    // const getToken = \"https://jvsv8khfpd.execute-api.us-east-1.amazonaws.com/dev/api/token/\";\n    // YOUR_GET_EVENTS_API_ENDPOINT\n    // const getCalendarEvents = \"https://jvsv8khfpd.execute-api.us-east-1.amazonaws.com/dev/api/get-events/\";\n/**\n *\n * @param {*} events:\n * The following function should be in the “api.js” file.\n * This function takes an events array, then uses map to create a new array with only locations.\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\n * The Set will remove all duplicates from the array.\n */\n\n const extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location); // local var with same label\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\n\n/* const checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n    .then((res) => res.json())\n    .catch((error) => error.json());\n\n  return result;\n}; */\n\nconst getEvents = async (max_results = 32) => {\n  //if (!events) return []\n  NProgress.start();\n  // console.log('getEvents token: ', token)\n  if (window.location.href.startsWith(\"http://localhost\")) {\n    NProgress.done();\n    return { events: mockData, locations: extractLocations(mockData) };\n  }\n    if (!navigator.onLine) {\n      const events = localStorage.getItem(\"lastEvents\");\n      NProgress.done();\n      return { events: JSON.parse(events).events,\n      locations: extractLocations(JSON.parse(events).events) };\n    }\n /*  if (!navigator.onLine) {\n    const { events } = await localStorage.getItem(\"lastEvents\");\n    NProgress.done();\n    return { events: JSON.parse(events), locations: extractLocations(events) };\n  } */\n\n  const token = await getAccessToken();\n  // console.log('getEvents token: ', token)\n  if (token) {\n    removeQuery();\n    // YOUR_GET_EVENTS_API_ENDPOINT\n    //testing new version of endpoint:\n    const url = `https://jvsv8khfpd.execute-api.us-east-1.amazonaws.com/dev/api/get-events/${token}`;\n    //const url = `https://jvsv8khfpd.execute-api.us-east-1.amazonaws.com/dev/api/get-events/{access_token}/${token}`;\n    const result = await axios.get(url);\n    if (result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data.events));\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\n    }\n    NProgress.done();\n    return { events: result.data.events, locations };\n  }\n};\n\n\n// const getAccessToken Waar is deze functie gebleven?\nconst getAccessToken = async () => {\n  const accessToken = await localStorage.getItem(\"access_token\");\n//  google redirect user back to app with code which you can use\n// to retrieve the access tocken from Lambda fcts on auth server.\nconst tokenCheck = accessToken && (await checkToken(accessToken));\n\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem(\"access_token\");\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get(\"code\");\n    if (!code) {\n      const results = await axios.get(\n      //\"YOUR_SERVERLESS_GET_AUTH_URL_ENDPOINT\"\n      \"https://jvsv8khfpd.execute-api.us-east-1.amazonaws.com/dev/api/get-auth-url\"\n    );\n    const { authUrl } = results.data;\n    return (window.location.href = authUrl);\n    }\n  return code && getToken(code);\n  }\nreturn accessToken;\n};\n\n// check volgorde van fcts\n\n\nconst getToken = async (code) => {\n  removeQuery();\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    `https://jvsv8khfpd.execute-api.us-east-1.amazonaws.com/dev/api/token/${encodeCode}`\n  )\n    .then((res) => {\n      return res.json();\n    })\n    .catch((error) => error);\n\n  access_token && localStorage.setItem(\"access_token\", access_token);\n\n  return access_token;\n};\n\nexport { getEvents, getAccessToken, extractLocations, getToken, checkToken };","import React, { useEffect, useState } from 'react';\nimport { PieChart, Pie, Cell, ResponsiveContainer } from 'recharts';\n//import { getDefaultNormalizer } from '@testing-library/react';\n\nconst EventGenre = ({ events }) => {\n  const [data, setData] = useState([]);\n  // eslint-disable-next-line\n  useEffect(() => { setData(() => getData()); }, [events]);\n\n\n// retrieving data genres 4.9\n  const getData = () => {\n    const genres = ['React', 'JavaScript','Node', 'jQuery', 'AngularJS'];\n    const data = genres.map((genre) => {\n      const value = events.filter(({summary}) => summary.split(' ').includes(genre)).length;\n      return { name: genre, value };\n    });\n    return data;\n  };\n const COLORS = ['#003f5c', '#ffa600','#ff6361','#58508d', '#bc5090'];\n\n  return (\n    <ResponsiveContainer height={400} >\n    <PieChart width={400} height={400} >\n     <Pie\n       data={data}\n       cx={200}\n       cy={200}\n       labelLine={false}\n       outerRadius={80}\n       fill=\"#8884d8\"\n       dataKey=\"value\"\n       label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\n     >\n       {\n          \tdata.map((entry, index) => (<Cell key={`cell-$(index}`} fill={COLORS[index % COLORS.length]} name={entry.name}/>\n           ))\n          }\n       </Pie>\n     </PieChart>\n    </ResponsiveContainer> \n  );\n}\n\nexport default EventGenre;","import React, { Component } from 'react';\nimport \"./nprogress.css\";\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { getEvents } from './api';\nimport { WarningAlert } from './Alert';\n// eslint-disable-next-line\nimport { checkToken, getToken } from './api';\nimport {\n  ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend\n} from 'recharts';\nimport EventGenre from './EventGenre';\n\nclass App extends Component {\n\nstate = {\n  events: [],\n  currentLocation: \"all\",\n  numberOfEvents: 32,\n  offlineText: \"\",\n  locations: []\n};\n\nwarningAlert = () => {\n  if (window.Navigator.onLine === false) {\n    this.setState({\n      offlineText: \"You are currently using this app offline, so be aware that the displayed list may not be updated.\"\n    });\n  } else {\n    this.setState({\n      offlineText: \"\",\n    });\n  }\n}\nasync componentDidMount() {\n  this.mounted = true;\n  await getEvents().then((response) => {\n    if(this.mounted) {\n    this.setState({ \n      events: response.events,\n      locations: response.locations\n     });\n    }\n  });\n}\ncomponentWillUnmount() {\n  this.mounted = false;\n}\n// retrieving data cities 4.9\ngetData = () => {\n  const { locations, events } = this.state;\n  const data = locations.map((location) => {\n    const number = events.filter((event) => event.location ===location).length;\n    const city = location.split(\",\").shift();\n    return { city, number};\n  });\n  return data;\n};\n\n// task part 3: you'll need to refactor the UpdateEvents fct\n// to take 2 parameters \"location\" and \"eventCount\" and in the state 32 number of events\nupdateEvents = (location, eventCount) => {\n  const { currentLocation, numberOfEvents } = this.state;\n  if (location) {\n    getEvents().then((response) => {\n      const locationEvents =\n        location === \"all\"\n          ? response.events\n          : response.events.filter((event) => event.location === location);\n      const events = locationEvents.slice(0, numberOfEvents);\n      return this.setState({\n        events: events,\n        currentLocation: location,\n        locations: response.locations,\n      });\n    });\n  } else {\n    getEvents().then((response) => {\n      const locationEvents =\n        currentLocation === \"all\"\n          ? response.events\n          : response.events.filter(\n              (event) => event.location === currentLocation\n            );\n      const events = locationEvents.slice(0, eventCount);\n      return this.setState({\n        events: events,\n        numberOfEvents: eventCount,\n        locations: response.locations, // check this line of code\n      });\n    });\n  }\n}\n\nrender() {\n  const { locations, numberOfEvents, events } = this.state;\n  return (\n    <div className=\"App\">\n      <h1 className=\"App-title\">Meet App</h1>\n      <h4>Improve your programming skills and connect with other Web Developers.</h4> \n      <h4>Choose your nearest city for upcoming events and let's meet up!</h4>\n       <CitySearch updateEvents={this.updateEvents} locations={locations} />\n       <NumberOfEvents\n          updateEvents={this.updateEvents}\n          numberOfEvents={numberOfEvents}\n          />   \n          <div className=\"data-vis-wrapper\">  \n           <EventGenre events={events} />\n           <ResponsiveContainer height={400} >\n             <ScatterChart margin={{ top: 20, right: 20, bottom: 20, left: 20 }}>\n              <CartesianGrid />\n              <XAxis type=\"category\" dataKey=\"city\" name=\"city\" />\n              <YAxis\n                allowDecimals={false}\n                type=\"number\"\n                dataKey=\"number\"\n                name=\"number of events\"\n              />\n              <Tooltip cursor={{ strokeDasharray: \"3 3\" }} />\n              <Legend verticalAlign=\"bottom\" height={36} />\n              <Scatter name=\" number of events per city\" data={this.getData()} fill=\"#bc5090\" />\n            </ScatterChart>\n          </ResponsiveContainer>\n        </div>  \n        <EventList events={events} />\n        <WarningAlert text={this.state.offlineText} />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport * as atatus from 'atatus-spa';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\natatus.config('5ba88d67a55845fa8c78b86391ec977e').install();\natatus.notify(new Error('Test Atatus Setup'));\n\n"],"sourceRoot":""}